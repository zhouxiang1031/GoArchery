// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestMsgReq struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsgReq) Reset()         { *m = TestMsgReq{} }
func (m *TestMsgReq) String() string { return proto.CompactTextString(m) }
func (*TestMsgReq) ProtoMessage()    {}
func (*TestMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *TestMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsgReq.Unmarshal(m, b)
}
func (m *TestMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsgReq.Marshal(b, m, deterministic)
}
func (m *TestMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsgReq.Merge(m, src)
}
func (m *TestMsgReq) XXX_Size() int {
	return xxx_messageInfo_TestMsgReq.Size(m)
}
func (m *TestMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsgReq proto.InternalMessageInfo

func (m *TestMsgReq) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *TestMsgReq) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type TestMsgResp struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Desc                 string   `protobuf:"bytes,2,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Flag                 int32    `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestMsgResp) Reset()         { *m = TestMsgResp{} }
func (m *TestMsgResp) String() string { return proto.CompactTextString(m) }
func (*TestMsgResp) ProtoMessage()    {}
func (*TestMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TestMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMsgResp.Unmarshal(m, b)
}
func (m *TestMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMsgResp.Marshal(b, m, deterministic)
}
func (m *TestMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMsgResp.Merge(m, src)
}
func (m *TestMsgResp) XXX_Size() int {
	return xxx_messageInfo_TestMsgResp.Size(m)
}
func (m *TestMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_TestMsgResp proto.InternalMessageInfo

func (m *TestMsgResp) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *TestMsgResp) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *TestMsgResp) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func init() {
	proto.RegisterType((*TestMsgReq)(nil), "protos.TestMsgReq")
	proto.RegisterType((*TestMsgResp)(nil), "protos.TestMsgResp")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0x26, 0x5c, 0x5c, 0x21,
	0xa9, 0xc5, 0x25, 0xbe, 0xc5, 0xe9, 0x41, 0xa9, 0x85, 0x42, 0x42, 0x5c, 0x2c, 0xa1, 0xc5, 0xa9,
	0x45, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x48, 0xcc, 0x25, 0xb5, 0x38, 0x59,
	0x82, 0x09, 0x22, 0x06, 0x62, 0x2b, 0x79, 0x72, 0x71, 0xc3, 0x75, 0x15, 0x17, 0x10, 0xab, 0x0d,
	0x24, 0x96, 0x96, 0x93, 0x98, 0x2e, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x1a, 0x04, 0x66, 0x27, 0x41,
	0x1c, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x39, 0x9f, 0x40, 0x8a, 0x9d, 0x00, 0x00, 0x00,
}
